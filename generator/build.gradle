plugins {
    id("io.papermc.paperweight.userdev")
}

// Specify what version the generator should use.
var mcVersion = "1.20.2"

dependencies {
    paperweightDevelopmentBundle("io.papermc.paper:dev-bundle:${mcVersion}-R0.1-SNAPSHOT")

    implementation("com.squareup:javapoet:1.13.0")
    implementation("io.github.classgraph:classgraph:4.8.165")

    implementation(project(":nms:shared")) {transitive = false}
    implementation(project(":nms:v1_20_2")) {transitive = false}
    implementation(project(":nms:v1_20_3")) {transitive = false}
    implementation(project(":nms:v1_20_4")) {transitive = false}

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.2")
}

test {
    useJUnitPlatform()
}

tasks.register("generateJava", JavaExec) {
    group = "generator"
    classpath sourceSets.main.compileClasspath, sourceSets.main.runtimeClasspath
    mainClass = "eu.jasperlorelai.antigone.generator.AntigoneGenerator"
    args("v" + mcVersion.replace(".", "_"))
}

tasks.register("generateDocs", JavaExec) {
    group = "generator"
    classpath sourceSets.main.compileClasspath, sourceSets.main.runtimeClasspath
    mainClass = "eu.jasperlorelai.antigone.generator.AntigoneDocs"
}

assemble.dependsOn(generateDocs)
